# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, 2021, Qiskit Optimization Development Team
# This file is distributed under the same license as the Qiskit Optimization
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit Optimization 0.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-12 22:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../../<reno.sphinxext branch>:4 current
msgid "Release Notes"
msgstr ""

#: ../../../<reno.sphinxext branch>:9 current
msgid "0.2.0"
msgstr ""

#: ../../../<reno.sphinxext branch>:14 current
msgid "New Features"
msgstr ""

#: ../../../<reno.sphinxext branch>:18 current
msgid ""
"Adds :meth:`qiskit_optimization.problems.LinearExpression.bounds` and "
":meth:`qiskit_optimization.problems.QuadraticExpression.bounds` that "
"return the lower bound and the upper bound of the expressions."
msgstr ""

#: ../../../<reno.sphinxext branch>:24 current
msgid ""
"Adds :class:`qiskit_optimization.algorithms.GurobiOptimizer`. ``pip "
"install qiskit_optimization[gurobi]`` installs `gurobipy "
"<https://pypi.org/project/gurobipy/>`_ to enable this optimizer."
msgstr ""

#: ../../../<reno.sphinxext branch>:30 current
msgid ""
"Adds the support of indicator constraints (e.g. ``x=1 -> y+z=1``) in "
":meth:`~qiskit_optimization.translators.from_docplex_mp` using the big-M "
"formulation."
msgstr ""

#: ../../../<reno.sphinxext branch>:35 current
msgid ""
"Adds translators between Ising Hamiltonian and "
":class:`qiskit_optimization.problems.QuadraticProgram`, "
":meth:`~qiskit_optimization.translators.from_ising` and "
":meth:`~qiskit_optimization.translators.to_ising`."
msgstr ""

#: ../../../<reno.sphinxext branch>:41 current
msgid ""
"Adds model translators between modeling libraries (e.g., docplex and "
"gurobipy) and :class:`~qiskit_optimization.problems.QuadraticProgram`. "
"Adds translator functions "
":meth:`~qiskit_optimization.translators.from_docplex_mp`, "
":meth:`~qiskit_optimization.translators.to_docplex_mp`, "
":meth:`~qiskit_optimization.translators.from_gurobipy`, and "
":meth:`~qiskit_optimization.translators.to_gurobipy` to "
":mod:`~qiskit_optimization.translators`."
msgstr ""

#: ../../../<reno.sphinxext branch>:51 current
msgid ""
"Introduced a new converter class "
":class:`qiskit_optimization.converters.MinimizeToMaximize`. It converts a"
" problem to a maximization problem."
msgstr ""

#: ../../../<reno.sphinxext branch>:56 current
msgid ""
"Introduced a new converter class "
":class:`qiskit_optimization.converters.LinearInequalityToPenalty`. It "
"converts the following inequality constraints to penalty terms where x, "
"y, :math:`x_i` are binary variables and P is a penalty factor."
msgstr ""

#: ../../../<reno.sphinxext branch>:60 current
msgid ""
"\\begin{array}{}\n"
"\\text { Inequality constraint } & & \\text { Penalty term } \\\\\n"
"x \\leq y & \\rightarrow  & P(x-x y) \\\\\n"
"x \\geq y & \\rightarrow  & P(y-x y) \\\\\n"
"\\sum_{i=1}^n x_i \\leq 1, n \\geq 2 & \\rightarrow & P \\sum_{i, j : i <"
" j} x_i x_j\\\\\n"
"\\sum_{i=1}^n x_i \\geq n-1, n \\geq 2 & \\rightarrow & P \\sum_{i, j : i"
" < j} (1 - x_i) (1 - x_j)\n"
"\\end{array}"
msgstr ""

#: ../../../<reno.sphinxext branch>:72 current
msgid ""
"Introduced a new converter class "
":class:`qiskit_optimization.converters.MaximizeToMinimize`. It converts a"
" problem to a minimization problem. The converter was added to the "
"default converters in "
":class:`qiskit_optimization.converters.QuadraticProgramToQubo`. "
"Algorithms that use ``QuadraticProgramToQubo`` apply "
"``MaximizeToMinimize`` internally."
msgstr ""

#: ../../../<reno.sphinxext branch>:79 current
msgid ""
"Allow leveraging Qiskit Runtime to execute VQE and QAOA in the cloud "
"using the :class:`~qiskit_optimization.runtime.VQEProgram` and  "
":class:`~qiskit_optimization.runtime.QAOAProgram`."
msgstr ""

#: ../../../<reno.sphinxext branch>:87 current
msgid "Upgrade Notes"
msgstr ""

#: ../../../<reno.sphinxext branch>:91 current
msgid ""
"Simplifies :class:`qiskit_optimization.algorithms.CplexOptimizer` by "
"calling CPLEX from ``docplex.mp.model.Model.solve`` directly. Also adds a"
" fallback code if no solution is found by CPLEX."
msgstr ""

#: ../../../<reno.sphinxext branch>:97 current
msgid ""
"Adds ``cplex_parameters`` as a dictionary to "
":class:`qiskit_optimization.algorithms.CplexOptimizer` so that users can "
"set `CPLEX parameters <https://www.ibm.com/docs/en/icos/20.1.0?topic"
"=cplex-parameters>`_ such as time limit and number of threads."
msgstr ""

#: ../../../<reno.sphinxext branch>:105 current
msgid ""
"``QuadraticProgram.pprint_as_string`` and "
"``QuadraticProgram.prettyprint`` have been removed, which were deprecated"
" in Qiskit Aqua 0.8.0 release (October 2020)."
msgstr ""

#: ../../../<reno.sphinxext branch>:111 current
msgid ""
"Changes "
":meth:`qiskit_optimization.algorithms.MinimumEigenOptimizer.solve` to "
"return the best solution in terms of the original problem, i.e., "
"``MinimumEigenOptimizationResult.samples[0]``, as "
":meth:`qiskit_optimization.algorithms.MinimumEigenOptimizationResult.x`. "
"It used to be the best solution in terms of the converted QUBO problem, "
"i.e., ``MinimumEigenOptimizationResult.raw_samples[0]``."
msgstr ""

#: ../../../<reno.sphinxext branch>:122 current
msgid "Deprecation Notes"
msgstr ""

#: ../../../<reno.sphinxext branch>:126 current
msgid ""
":meth:`~qiskit_optimization.problems.QuadraticProgram.from_docplex`, "
":meth:`~qiskit_optimization.problems.QuadraticProgram.to_docplex` are "
"deprecated because "
":meth:`~qiskit_optimization.translators.from_docplex_mp` and "
":meth:`~qiskit_optimization.translators.to_docplex_mp` cover the "
"features."
msgstr ""

#: ../../../<reno.sphinxext branch>:135 current
msgid "Bug Fixes"
msgstr ""

#: ../../../<reno.sphinxext branch>:139 current
msgid ""
"Fix bit ordering in "
":class:`qiskit_optimization.algorithms.MinimumEigenOptimizer` with "
"qasm_simulator."
msgstr ""

#: ../../../<reno.sphinxext branch>:144 current
msgid ""
"Fix probabilities of solution samples with qasm_simulator in "
":class:`qiskit_optimization.algorithms.MinimumEigenOptimizer`. See "
"https://github.com/Qiskit/qiskit-optimization/pull/97 for details."
msgstr ""

#: ../../../<reno.sphinxext branch>:150 current
msgid ""
"Fixes :meth:`qiskit_optimization.problems.QuadraticObjective.evaluate` "
"and "
":meth:`qiskit_optimization.problems.QuadraticObjective.evaluate_gradient`"
" to raise ``QiskitOptimizationError`` with an appropriate message if no "
"objective function is set."
msgstr ""

#: ../../../<reno.sphinxext branch>:156 current
msgid ""
"Fixes ``rotation_count`` in "
":class:`qiskit_optimization.algorithms.GroverOptimizer`. This fix uses "
"``algorithm_globals.random.integers(0, m)`` to generate a random integer "
"in a range 0..m-1."
msgstr ""

#: ../../../<reno.sphinxext branch>:162 current
msgid ""
"Sorts the order of ``result.get_counts(qc)`` by bitstring in "
":class:`qiskit_optimization.algorithms.GroverOptimizer` when "
"``qasm_simulator`` is used so that the algorithm behaves "
"deterministically. The previous version sorts the counts by "
"probabilities, but some bitstrings may have the same probability and the "
"algorithm could behave probabilistically."
msgstr ""

#: ../../../<reno.sphinxext branch>:170 current
msgid ""
"Fixes :class:`qiskit_optimization.algorithms.GoemansWilliamsonOptimizer`."
" If a minimization problem is passed to the optimizer, then it is "
"converted to a maximization problem and then solved."
msgstr ""

